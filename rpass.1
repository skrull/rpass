.\" Copyright (c) 2017, 2019 Tim Kuijsten
.\"
.\" Permission to use, copy, modify, and/or distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: December 13 2019 $
.Dt RPASS 1
.Os
.Sh NAME
.Nm rpass
.Nd strong password generator for humans
.Sh SYNOPSIS
.Nm
.Op Fl V
.Op Ar bitlen
.Sh DESCRIPTION
.Nm
is a strong password generator for human beings.
The generated passwords are both visually and phonetically unambiguous.
The passwords are case-insensitive so that there is no alternation between
keyboards when typing the password and blanks can be inserted at arbitrary
places to enhance visual representation.
.Bl -tag -width Ds
.It Fl V
Print the version of rpass.
.It Ar bitlen
Use a key space of the specified bit length, defaults to 40.
.El
.Pp
In order to determine the right
.Ar bitlen
three factors should be considered:
.Bl -enum -offset Ds
.It
the hashing mechanism used to store the password
.It
the time for which this password has to be secure
.It
the processing power of the adversary
.El
.Pp
The default
.Ar bitlen
of 40 bits relies on the following requirements: the password is stored using
.Xr bcrypt 3
with 2^10 rounds, it should only be secure for one year and the adversary
has no more than $25,000.00 to spend on brute forcing the password (as of 2019).
.Sh EXIT STATUS
.Ex -std
.Sh EXAMPLES
Random password from the default key space:
.Bd -literal -offset 4n
$ rpass
jikmus xuzjex
.Ed
.Pp
Random password from an 80 bit key space:
.Bd -literal -offset 4n
$ rpass 80
jultar ramlap rinwun bemvuh
.Ed
.Pp
In order to calculate the required
.Ar bitlen
let's consider a scenario with the following requirements.
The generated password will be used for at most half a year and is
stored using PBKDF2-HMAC-SHA256 with a million iterations.
Furthermore the adversary has $25,000.00 to spend.
According to
.Dq 8x Nvidia GTX 1080 Ti Hashcat Benchmarks
as of 2019 the adversary can try 15 million hashes per second on
PBKDF2-HMAC-SHA256 with a thousand iterations.
This would be 15 thousand hashes per second on PBKDF2-HMAC-SHA256 with a million
iterations.
Hence a key space of 15,000 * 3,600 * 24 * 183 * 2 = 38.8 bit would be
sufficient.
.Sh SEE ALSO
.Xr bcrypt 3 ,
.Lk https://gist.github.com/epixoip/ace60d09981be09544fdd35005051505 8x Nvidia GTX 1080 Ti Hashcat Benchmarks
.Lk https://tools.ietf.org/html/rfc8018 PKCS #5: Password-Based Cryptography Specification
.Sh AUTHORS
.An -nosplit
.An Tim Kuijsten
